{
  "Description": "Integration Test for aws-apigateway-sqs",
  "Resources": {
    "testapigatewaysqsdefaultRestApi554243C3": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Name": "RestApi"
      }
    },
    "testapigatewaysqsdefaultRestApiDeploymentFB9688F515062e1c331d835b42c02aa42f85db7f": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "testapigatewaysqsdefaultRestApi554243C3"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "testapigatewaysqsdefaultRestApiGET733E6394",
        "testapigatewaysqsdefaultRestApimessage41073D7F"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource"
            }
          ]
        }
      }
    },
    "testapigatewaysqsdefaultRestApiDeploymentStageprod600FEEE2": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "testapigatewaysqsdefaultRestApi554243C3"
        },
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "testapigatewaysqsdefaultApiAccessLogGroup16132600",
              "Arn"
            ]
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \"$context.httpMethod $context.resourcePath $context.protocol\" $context.status $context.responseLength $context.requestId"
        },
        "DeploymentId": {
          "Ref": "testapigatewaysqsdefaultRestApiDeploymentFB9688F515062e1c331d835b42c02aa42f85db7f"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "StageName": "prod"
      }
    },
    "testapigatewaysqsdefaultRestApimessage41073D7F": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testapigatewaysqsdefaultRestApi554243C3",
            "RootResourceId"
          ]
        },
        "PathPart": "message",
        "RestApiId": {
          "Ref": "testapigatewaysqsdefaultRestApi554243C3"
        }
      }
    },
    "testapigatewaysqsdefaultRestApiGET733E6394": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Fn::GetAtt": [
            "testapigatewaysqsdefaultRestApi554243C3",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "testapigatewaysqsdefaultRestApi554243C3"
        },
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "testapigatewaysqsdefaultapigatewayrole080B85EC",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "ResponseTemplates": {
                "text/html": "Error"
              },
              "SelectionPattern": "500",
              "StatusCode": "500"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'"
          },
          "RequestTemplates": {
            "application/json": "Action=ReceiveMessage"
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":sqs:path/",
                {
                  "Ref": "AWS::AccountId"
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "queue276F7297",
                    "QueueName"
                  ]
                }
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true
            },
            "StatusCode": "200"
          },
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true
            },
            "StatusCode": "500"
          }
        ]
      }
    },
    "testapigatewaysqsdefaultRestApiUsagePlan3475CA67": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "testapigatewaysqsdefaultRestApi554243C3"
            },
            "Stage": {
              "Ref": "testapigatewaysqsdefaultRestApiDeploymentStageprod600FEEE2"
            },
            "Throttle": {}
          }
        ]
      }
    },
    "testapigatewaysqsdefaultApiAccessLogGroup16132600": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "testapigatewaysqsdefaultLambdaRestApiCloudWatchRole8EA3C5EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy"
          }
        ]
      }
    },
    "testapigatewaysqsdefaultLambdaRestApiAccountF7D19F4F": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "testapigatewaysqsdefaultLambdaRestApiCloudWatchRole8EA3C5EC",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "testapigatewaysqsdefaultRestApi554243C3"
      ]
    },
    "testapigatewaysqsdefaultapigatewayrole080B85EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "testapigatewaysqsdefaultapigatewayroleDefaultPolicyFF253592": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EncryptionKey1B843E66",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sqs:ReceiveMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "queue276F7297",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testapigatewaysqsdefaultapigatewayroleDefaultPolicyFF253592",
        "Roles": [
          {
            "Ref": "testapigatewaysqsdefaultapigatewayrole080B85EC"
          }
        ]
      }
    },
    "EncryptionKey1B843E66": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "testapigatewaysqsdefaultapigatewayrole080B85EC",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "EnableKeyRotation": true
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "deadLetterQueue3F848E28": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "EncryptionKey1B843E66",
            "Arn"
          ]
        }
      }
    },
    "queue276F7297": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "EncryptionKey1B843E66",
            "Arn"
          ]
        },
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "deadLetterQueue3F848E28",
              "Arn"
            ]
          },
          "maxReceiveCount": 3
        }
      }
    }
  },
  "Outputs": {
    "testapigatewaysqsdefaultRestApiEndpointE6DCCE4E": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "testapigatewaysqsdefaultRestApi554243C3"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "testapigatewaysqsdefaultRestApiDeploymentStageprod600FEEE2"
            },
            "/"
          ]
        ]
      }
    }
  }
}